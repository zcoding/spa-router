{"version":3,"file":"spa-router.js","sources":["../../src/utils.js","../../src/listener.js","../../src/querystring.js","../../src/rnode.js","../../src/rtree.js","../../src/api.js","../../src/main.js"],"sourcesContent":["export function extend() {\n  const obj = {};\n  const srcList = Array.prototype.slice.call(arguments, 0);\n  for (let i = 0, len = srcList.length; i < len; ++i) {\n    const src = srcList[i];\n    for (let q in src) {\n      if (src.hasOwnProperty(q)) {\n        obj[q] = src[q];\n      }\n    }\n  }\n  return obj;\n}\n\n// 判断是否 thenable 对象\nexport function isThenable (obj) {\n  return typeof obj === 'object' && typeof obj['then'] === 'function';\n}\n\nexport function removeHashBang (url) {\n  return url.replace(/^#!?/, '');\n}\n\nexport function addEvent(name, handler) {\n  if (window.addEventListener) {\n    window.addEventListener(name, handler, false);\n  } else if (window.attachEvent) {\n    window.attachEvent('on' + name, handler);\n  } else {\n    window['on' + name] = handler;\n  }\n}\n\nexport function warn (message) {\n  if (typeof console !== 'undefined') {\n    console.warn(`[spa-router] ${message}`);\n  }\n}\n\nexport function assert (condition, message) {\n  if (!condition) {\n    throw new Error(`[spa-router] ${message}`);\n  }\n}\n\nexport const isArray = Array.isArray ? Array.isArray : function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexport function makeSureArray (obj) {\n  return isArray(obj) ? obj : (obj ? [obj] : []);\n}\n\nexport function ArrayCopy (arr) {\n  return arr.slice(0);\n}\n\nexport function formatHashBangURI (path) {\n  let raw = path.replace(/^#!?/, '');\n  // always\n  if (raw.charAt(0) !== '/') {\n    raw = '/' + raw;\n  }\n  return `/#!${raw}`;\n}\n\nexport const historySupport = (function () {\n  const ua = window.navigator.userAgent;\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n})();\n","import { addEvent, warn, historySupport } from './utils';\n\nconst MODE = {\n  HASH: 1,\n  HASHBANG: 1,\n  HISTORY: 2\n};\n\nlet RouteMode = MODE.HASHBANG;\n\nlet _init = false;\n\n/// Listener\nconst Listener = {\n  listeners: [],\n\n  setUrlOnly: false,\n\n  supportHistory () {\n    return historySupport;\n  },\n\n  setMode (mode) {\n    mode = String(mode).toUpperCase();\n    RouteMode = MODE[mode] || MODE.HASHBANG;\n  },\n\n  init () {\n    if (_init) {\n      return this;\n    }\n    _init = true;\n    if (RouteMode === MODE.HISTORY) { // IE 10+\n      if (historySupport) {\n        addEvent('popstate', onchange);\n      } else {\n        RouteMode = MODE.HASHBANG;\n        // warning\n        warn('你的浏览器不支持 History API ，只能使用 hashbang 模式');\n        addEvent('hashchange', onchange);\n      }\n    } else {\n      addEvent('hashchange', onchange);\n    }\n    return this;\n  },\n\n  add (fn) {\n    this.listeners.push(fn);\n    return this;\n  },\n\n  remove (id) {\n    for (let i = 0; i < this.listeners.length; ++i) {\n      if (this.listeners[i].id === id) {\n        this.listeners.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  },\n\n  setHashHistory (targetURL) {\n    if (RouteMode === MODE.HISTORY) {\n      history.pushState({}, '', targetURL);\n    } else {\n      if (targetURL[0] === '/') {\n        location.hash = `!${targetURL}`;\n      } else {\n        let currentURL = location.hash.replace(/^#!?/, ''); // 去掉前面的 #!\n        const queryStringIndex = currentURL.indexOf('?');\n        if (queryStringIndex !== -1) {\n          currentURL = currentURL.slice(0, queryStringIndex);\n        }\n        if (/.*\\/$/.test(currentURL)) {\n          location.hash = `!${currentURL}${targetURL}`;\n        } else {\n          const hash = currentURL.replace(/([^\\/]+|)$/, function($1) {\n            return $1 === '' ? '/' + targetURL : targetURL;\n          });\n          location.hash = `!${hash}`;\n        }\n      }\n    }\n    return this;\n  },\n\n  stop () {\n    // remove event listener\n  }\n};\n\nfunction onchange(onChangeEvent) {\n  if (Listener.setUrlOnly) {\n    Listener.setUrlOnly = false;\n    return false;\n  }\n  let listeners = Listener.listeners;\n  for (let i = 0, l = listeners.length; i < l; i++) {\n    listeners[i].handler.call(null, onChangeEvent);\n  }\n}\n\nexport default Listener;\n","import { isArray } from './utils';\n\nconst encode = encodeURIComponent, decode = decodeURIComponent;\n\nexport default {\n  /**\n   * querystring.stringify\n   * @param { Object } obj\n   * @param { Boolean } traditional [default:false]\n   * @return { String }\n   *\n   * traditional is true:  {x: [1, 2]} => 'x=1&x=2'\n   * traditional is false: {x: [1, 2]} => 'x[]=1&x[]=2'\n   */\n  stringify(obj, traditional) {\n    if (!obj) {\n      return '';\n    }\n    const appendString = traditional ? '' : '[]';\n    const keysArray = [];\n    for (let p in obj) {\n      if (obj.hasOwnProperty(p)) {\n        keysArray.push(p);\n      }\n    }\n    const names = keysArray.sort();\n\n    const parts = [];\n    for (let i = 0; i < names.length; ++i) {\n      const name = names[i];\n      const value = obj[name];\n\n      if (isArray(value)) {\n        value.sort();\n        const _parts = [];\n        for (let j = 0; j < value.length; ++j) {\n          _parts.push(`${encode(name).replace(/%20/g, '+')}${appendString}=${encode(value[j]).replace(/%20/g, '+')}`);\n        }\n        parts.push(_parts.join('&'));\n        continue;\n      }\n      parts.push(`${encode(name).replace(/%20/g, '+')}=${encode(value).replace(/%20/g, '+')}`);\n    }\n    return parts.join('&');\n  },\n\n  /**\n   * querystring.parse\n   * @param { String } queryString\n   * @return { Object }\n   * \n   * 'x=1&y=2' => {x: 1, y: 2}\n   * 'x=1&x=2' => {x: [1, 2]}\n   */\n  parse(queryString) {\n    if (typeof queryString !== 'string') {\n      return {};\n    }\n\n    queryString = queryString.trim().replace(/^(\\?|#)/, '');\n\n    if (queryString === '') {\n      return {};\n    }\n\n    const queryParts = queryString.split('&');\n\n    const query = {};\n\n    for (let i = 0; i < queryParts.length; ++i) {\n      const parts = queryParts[i].replace(/\\+/g, '%20').split('='); // 特殊字符`+`转换为空格\n      const name = decode(parts[0]), value = parts[1] === undefined ? null : decode(parts[1]);\n\n      if (!query.hasOwnProperty(name)) {\n        query[name] = value;\n      } else if (isArray(query[name])) {\n        query[name].push(value);\n      } else {\n        query[name] = [query[name], value];\n      }\n    }\n    return query;\n  }\n};\n","import { isArray, makeSureArray, ArrayCopy, isThenable } from './utils';\n\n/**\n * RNode\n * @constructor\n * @param {String} value\n *\n * path:          区分同级节点的唯一标识\n * params:        path 包含的参数，使用{参数名:参数规则}键值对表示\n * callbacks:     路由匹配时执行的回调函数或队列\n * beforeEnter:   路由匹配时，callbacks 执行之前执行的回调函数或队列（如果 beforeEnter 返回 false 则不会进入 callbacks 执行阶段）\n * beforeLeave:   路由匹配时，进入下一个路由之前（也就是当前路由离开之前）执行的回调函数或队列\n * children:      子节点列表引用\n * parent:        父节点引用\n */\nfunction RNode(value) {\n  this.path = value;\n  this.params = false;\n  this.title = false;\n  this.data = null;\n  this._hooks = {};\n  this.children = [];\n  this.parent = null;\n  this._registered = false;\n  this._redirect = null; // 重定向\n}\n\nconst proto = RNode.prototype;\n\nfunction afterThen (thenable, restList, context, params) {\n  return thenable.then(function () {\n    return callThenableList(restList, context, params);\n  });\n}\n\nfunction callThenableList (callbacks, context, params) {\n  let currentReturn;\n  for (let i = 0; i < callbacks.length; ++i) {\n    currentReturn = callbacks[i].apply(context, params);\n    if (isThenable(currentReturn)) {\n      return afterThen(currentReturn, callbacks.slice(i+1), context, params);\n    } else if (currentReturn === false) {\n      break;\n    }\n  }\n  return currentReturn;\n}\n\n// 如果返回 thenable 对象，则后面的回调要等到当前异步操作完成再执行，如果异步操作失败，则后面的回调不执行\n// 如果返回 false 则后面的回调不执行\nproto.callHooks = function _callHooks (hookName, Req) {\n  const callbacks = this._hooks[hookName] || [];\n  const _copyCallbacks = ArrayCopy(callbacks); // 复制一个，避免中间调用了 off 导致 length 变化\n  callThenableList(_copyCallbacks, null, [Req]);\n  return this;\n};\n\nproto.addHooks = function addHooks (hookName, callbacks) {\n  this._hooks[hookName] = makeSureArray(callbacks);\n  return this;\n};\n\n// add children\nproto.addChildren = function addChildren (children) {\n  if (isArray(children)) {\n    this.children = this.children.concat(children);\n  } else {\n    this.children.push(children);\n  }\n  return this;\n};\n\nproto.removeChild = function removeChild (child) {\n  for (let i = 0; i < this.children.length; ++i) {\n    if (this.children[i] === child) {\n      this.children.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\nexport default function createRNode (value) {\n  return new RNode(value);\n}\n","import createRNode from './rnode';\nimport { warn } from './utils';\n\n/**\n * 根据给定的 path，以 routeTreeRoot 为根节点查找，返回 path 对应的 rnode 节点\n * 如果节点不存在，并且 createIfNotFound 为 true 就创建新节点\n * 匹配参数（参数名由字母、数字、下划线组成，不能以数字开头。后面带括号的是特定参数的匹配规则。）\n *\n * createIfNotFound 当节点不存在时创建新节点\n * */\nexport function findNode(routeTreeRoot, routePath, createIfNotFound) {\n  if (routePath === '') { // 当前节点\n    return routeTreeRoot;\n  }\n  const parts = routePath.split('/');\n  let target = null, found = false;\n  let parent = routeTreeRoot;\n  let params;\n  for (let i = 0, len = parts.length; i < len; ++i) {\n    params = false;\n    let realCurrentValue = parts[i];\n\n    const matcher = /:([a-zA-Z_][a-zA-Z0-9_]*)(\\([^\\)]+\\))?/g;\n\n    let k = 0;\n\n    function replacement($1, $2, $3) {\n      params = params || [];\n      params[k++] = $2;\n      if (!$3) { // In IE 8 , $3 is an empty String while in other browser it is undefined.\n        return '([a-zA-Z0-9_]+)';\n      } else {\n        return $3;\n      }\n    }\n\n    realCurrentValue = realCurrentValue.replace(matcher, replacement);\n\n    for (let j = 0; j < parent.children.length; ++j ) {\n      if (parent.children[j].path === realCurrentValue) {\n        target = parent.children[j];\n        found = true;\n        break;\n      }\n    }\n    if (!found) { // 不存在\n      if (!createIfNotFound) return false;\n      // 创建新节点\n      const extendNode = createRNode(realCurrentValue);\n      parent.addChildren(extendNode);\n      extendNode.parent = parent;\n      extendNode.params = params;\n      target = extendNode;\n    }\n    parent = target;\n    found = false;\n  }\n  return target;\n}\n\nfunction createRouteNodeInPath (rootNode, routePath) {\n  routePath = routePath.replace(/^\\/([^\\/]*)/, '$1'); // 去掉前置 /\n  if (routePath === '*') {\n    const rnode = createRNode('');\n    rnode.parent = rootNode;\n    rootNode.addChildren(rnode);\n    return rnode;\n  } else {\n    return findNode(rootNode, routePath, true);\n  }\n}\n\n// 构造路由树\nexport function createRouteTree(namedRoutes, routeNode, routeOptions) {\n  if (routeOptions.name) {\n    if (namedRoutes[routeOptions.name]) {\n      warn(`已经存在的具名路由 ${routeOptions.name} 将被覆盖`);\n    }\n    namedRoutes[routeOptions.name] = routeNode;\n  }\n  if (routeOptions.data) {\n    routeNode.data = routeOptions.data;\n  }\n  if (routeOptions.title) {\n    routeNode.title = routeOptions.title;\n  }\n  if (routeOptions.redirect) {\n    routeNode._redirect = routeOptions.redirect;\n  }\n  routeNode.addHooks('beforeEnter', routeOptions.beforeEnter);\n  routeNode.addHooks('callbacks', routeOptions.controllers);\n  routeNode.addHooks('beforeLeave', routeOptions.beforeLeave);\n  if (routeOptions.sub) { // 子路由\n    for (let subRoutePath in routeOptions.sub) {\n      if (routeOptions.sub.hasOwnProperty(subRoutePath)) {\n        const subRouteNode = createRouteNodeInPath(routeNode, subRoutePath);\n        subRouteNode._registered = true;\n        createRouteTree(namedRoutes, subRouteNode, routeOptions.sub[subRoutePath]);\n      }\n    }\n  }\n\n}\n\n// 创建根结点\nexport function createRootRouteTree (namedRoutes, routes) {\n  const rootRouteNode = createRNode('');\n  createRouteTree(namedRoutes, rootRouteNode, {\n    sub: routes\n  });\n  return rootRouteNode;\n}\n\n// 计算一个节点在一棵树的层次\nfunction calcRNodeDepth (currentRouteNode) {\n  let depth = 0;\n  let rnode = currentRouteNode;\n  while (rnode) {\n    depth++;\n    rnode = rnode.parent;\n  }\n  return depth;\n}\n\n/**\n * dfs 找匹配的路由节点\n * @param {RNode} currentRouteNode 当前节点\n * @param {Array} parts 路径分段数组\n * */\n// @TODO parts 很长并且打开 devtools 的时候会变慢？\nfunction dfs (currentRouteNode, parts) {\n  const currentPathValue = parts[0];\n  const matcher = new RegExp('^' + currentRouteNode.path + '$');\n  const matches = currentPathValue.match(matcher);\n  if (!matches) { // 当前节点不匹配，返回\n    // 如果当前节点是 * 节点，则可能在找不到的时候返回这个节点\n    if (currentRouteNode.path === '') {\n      return {\n        rnode: currentRouteNode,\n        params: {},\n        notFound: true\n      };\n    }\n    return false;\n  }\n  const currentParams = {};\n  if (currentRouteNode.params) {\n    const paramsMatches = Array.prototype.slice.call(matches, 1);\n    for (let k = 0; k < paramsMatches.length; ++k) {\n      currentParams[currentRouteNode.params[k]] = paramsMatches[k];\n    }\n  }\n  if (parts.length === 1) { // 在当前节点完成匹配\n    if (!currentRouteNode._registered) { // 不是注册节点\n      return false;\n    }\n    return {\n      rnode: currentRouteNode,\n      params: currentParams\n    };\n  }\n  const notFoundList = [];\n  for (let i = 0; i < currentRouteNode.children.length; ++i) {\n    const _result = dfs(currentRouteNode.children[i], parts.slice(1));\n    if (_result && !_result.notFound) { // 在子树中完成匹配\n      // 合并 params\n      for (let p in _result.params) {\n        if (_result.params.hasOwnProperty(p)) {\n          currentParams[p] = _result.params[p];\n        }\n      }\n      return {\n        rnode: _result.rnode,\n        params: currentParams\n      };\n    }\n    if (_result.notFound) {\n      // 合并 currentParams\n      for (let p in currentParams) {\n        if (currentParams.hasOwnProperty(p)) {\n          _result.params[p] = currentParams[p];\n        }\n      }\n      notFoundList.push(_result);\n    }\n  }\n  // 全部路径都走完，找不到匹配项\n  // 如果有 * 节点匹配，则返回匹配路径最长的 * 节点\n  if (notFoundList.length > 0) {\n    let max = -1, maxIndex = -1;\n    for (let i = 0; i < notFoundList.length; ++i) {\n      const depth = calcRNodeDepth(notFoundList[i].rnode);\n      if (depth > max) {\n        max = depth;\n        maxIndex = i;\n      }\n    }\n    return notFoundList[maxIndex];\n  }\n  return false;\n}\n\n/**\n * 搜索路由树，看是否存在匹配的路径，如果存在，返回相应的回调函数\n * @todo 只返回第一个匹配到的路由（如果存在多个匹配？）\n * @param {RNode} tree 树根\n * @param {String} path 要匹配的路径\n * 返回值包含两个，用数组表示[rnode, params]\n * @return {Function|Array|null} 如果存在就返回相应的回调，否则返回null\n * @return {[Array, Object]} 同时返回回调和参数\n *\n * */\nexport function searchRouteTree(tree, path) {\n  path = path === '/' ? '' : path; // 如果是 / 路径，特殊处理（避免 split 之后多一项）\n\n  const result = dfs(tree, path.split('/'));\n\n  if (result.notFound) {\n    return {\n      rnode: result.rnode,\n      params: result.params\n    };\n  }\n\n  return result;\n}\n","import { makeSureArray, warn, formatHashBangURI } from './utils';\nimport Listener from './listener';\nimport QS from './querystring';\nimport { findNode, createRouteTree, searchRouteTree } from './rtree';\n\nlet lastReq = null, lastRouteNode = null;\n\nfunction handlerHashbangMode (onChangeEvent) {\n  const newURL = onChangeEvent && onChangeEvent.newURL || location.hash;\n  const url = newURL.replace(/.*#!/, '');\n  this.dispatch(url.charAt(0) === '/' ? url : `/${url}`);\n}\n\nfunction handlerHistoryMode (onChangeEvent) {\n  const url = location.pathname + location.search + location.hash;\n  this.dispatch(url.charAt(0) === '/' ? url : `/${url}`);\n}\n\nexport function start () {\n  if (this._isRunning) { // start 只调用一次\n    warn('start 方法只能调用一次');\n    return this;\n  }\n  this._isRunning = true;\n  const _handler = this.options.mode === 'history' ? handlerHistoryMode : handlerHashbangMode;\n  const _this = this;\n  Listener.init().add({\n    id: this._uid,\n    handler: function handler () {\n      return _handler.call(_this);\n    }\n  });\n  if (this.options.mode !== 'history' && !/^#!\\//.test(location.hash)) {\n    const i = location.href.indexOf('#');\n    const url = location.hash.replace(/^#!?/, '');\n    location.replace(location.href.slice(0, i >= 0 ? i : 0) + '#!/' + url.replace(/^\\//, ''));\n  } else {\n    // 首次触发\n    _handler.call(this);\n  }\n  return this;\n}\n\nexport function stop () {\n  Listener.remove(this._uid);\n  this._isRunning = false;\n  return this;\n}\n\nexport function destroy () {\n  this.stop();\n  this._namedRoutes = null;\n  this._rtree = null;\n  this._hooks = null;\n  this.options = null;\n  return null;\n}\n\n// 动态添加新路由（可能会替换原有的路由）\nexport function mount (routePath, routes) {\n  routePath = routePath.replace(/^\\/([^\\/]*)/, '$1'); // 去掉前置 /\n  const currentRouteNode = findNode(this._rtree, routePath, true);\n  createRouteTree(this._namedRoutes, currentRouteNode, routes);\n  return this;\n}\n\n// 路由描述对象转换为路径\n// 如果缺少参数，会抛出错误\nfunction routeDescObjToPath (namedRoutes, routeDescObj) {\n  const routeNode = namedRoutes[routeDescObj.name];\n  if (!routeNode) {\n    return null;\n  }\n  const paths = [];\n  let rnode = routeNode;\n  while (rnode) {\n    let pathvalue = rnode.path;\n    if (rnode.params) {\n      if (!routeDescObj.params) {\n        throw new Error('缺少参数');\n      }\n      let paramsIndex = 0;\n      pathvalue = pathvalue.replace(/\\([^\\)]+\\)/g, function ($1) {\n        const paramKey = rnode.params[paramsIndex++];\n        if (!routeDescObj.params.hasOwnProperty(paramKey)) {\n          throw new Error(`缺少参数 \"${paramKey}\"`);\n        }\n        return routeDescObj.params[paramKey];\n      });\n    }\n    paths.unshift(pathvalue);\n    rnode = rnode.parent;\n  }\n  let query = '';\n  if (routeDescObj.query) {\n    query += `?${QS.stringify(routeDescObj.query, routeDescObj.traditional)}`;\n  }\n  return paths.join('/') + query;\n}\n\n// 根据给定的路径，遍历路由树，只要找到一个匹配的就把路由返回\nexport function dispatch (path) {\n  if (typeof path === 'object' && path !== null) { // {name: 'routeName', params: {}}\n    path = routeDescObjToPath(this._namedRoutes, path);\n  }\n  if (lastReq) {\n    this._callHooks('beforeEachLeave', lastReq);\n    if (lastRouteNode) {\n      lastRouteNode.callHooks('beforeLeave', lastReq);\n    }\n  }\n  const routeTree = this._rtree;\n  // 保存原始请求uri\n  const uri = path;\n  const queryIndex = path.indexOf('?');\n  const _hashIndex = path.indexOf('#');\n  const hashIndex = _hashIndex === -1 ? path.length : _hashIndex;\n  const queryString = queryIndex === -1 ? '' : path.slice(queryIndex+1, hashIndex);\n  path = queryIndex === -1 ? path : path.slice(0, queryIndex);\n  const Req = {uri: uri, path: path, query: QS.parse(queryString), $router: this};\n\n  if (path === '/') {\n    path = '';\n  }\n  const result = searchRouteTree(routeTree, path);\n  if (!result) return this; // 啥都找不到\n  const routeNode = result.rnode, params = result.params;\n  // 如果有 redirect 就重定向\n  if (routeNode._redirect) {\n    this.redirect(routeNode._redirect);\n    return this;\n  }\n  Req.params = params;\n  Req.data = routeNode ? routeNode.data : null;\n  if (routeNode) {\n    if (routeNode.title !== false) {\n      document.title = routeNode.title;\n    } else {\n      if (this.options.title !== false) {\n        document.title = this.options.title;\n      }\n    }\n  }\n  this._callHooks('beforeEachEnter', Req);\n  if (routeNode) {\n    routeNode.callHooks('beforeEnter', Req); // @TODO 如果 beforeEnter 返回 false 或者 Promise 会影响 callbacks\n    routeNode.callHooks('callbacks', Req);\n  }\n  lastReq = Req;\n  lastRouteNode = routeNode;\n  return this;\n}\n\n// 动态添加路由回调\nexport function on (routePath, callbacks) {\n  routePath = routePath.replace(/^\\/([^\\/]*)/, '$1'); // 去掉前置 /\n  const routeNode = findNode(this._rtree, routePath, true);\n  if (!routeNode._hooks['callbacks']) {\n    routeNode.addHooks('callbacks', callbacks);\n  } else {\n    routeNode._hooks['callbacks'] = routeNode._hooks['callbacks'].concat(makeSureArray(callbacks));\n  }\n  return this;\n}\n\n// 动态移除路由回调\nexport function off (routePath, cb) {\n  routePath = routePath.replace(/^\\/([^\\/]*)/, '$1'); // 去掉前置 /\n  const routeNode = findNode(this._rtree, routePath, false);\n  if (routeNode && routeNode._hooks['callbacks']) {\n    if (cb) {\n      for (let i = 0; i < routeNode._hooks['callbacks'].length; ++i) {\n        if (routeNode._hooks['callbacks'][i] === cb) {\n          routeNode._hooks['callbacks'].splice(i, 1);\n          break;\n        }\n      }\n    } else {\n      routeNode._hooks['callbacks'].splice(0, routeNode._hooks['callbacks'].length);\n    }\n  }\n  if (routeNode && routeNode._hooks['callbacks'] && routeNode._hooks['callbacks'].length === 0 && routeNode.children.length === 0 && routeNode.parent) {\n    routeNode.parent.removeChild(routeNode);\n  }\n  return this;\n}\n\n// 动态添加路由回调，但是只响应一次\nexport function once (routePath, callbacks) {\n  callbacks = makeSureArray(callbacks);\n  const _this = this;\n  function onlyOnce (req) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      callbacks[i].call(_this, req);\n    }\n    _this.off(routePath, onlyOnce);\n  }\n  return this.on(routePath, onlyOnce);\n}\n\n/**\n * 这个方法会改变当前页面的 `url`，从而触发路由\n * 在 history 模式下，用户无法通过标签改变 `url` 而不跳转页面，需要监听 click 事件，禁止默认跳转行为，并调用 go 方法\n * 如果是 history 模式，相当于调用一次 history.pushState() 然后再调用 .dispatch()\n * 如果 url 没有改变，不会\"刷新\"页面，要通过代码“刷新”页面，可以调用 reload 方法\n *\n * path 可以是一个路由描述对象\n * */\nexport function go (path) {\n  const loc = window.location;\n  const oldURI = loc.pathname + loc.search;\n  if (typeof path === 'object' && path !== null) {\n    path = routeDescObjToPath(this._namedRoutes, path);\n  }\n  Listener.setHashHistory(path);\n  const newURI = `${loc.pathname}${loc.search}`;\n  if (this.options.mode === 'history' && oldURI !== newURI) {\n    this.dispatch(newURI);\n  }\n  return this;\n}\n\nexport function back () {\n  if (Listener.supportHistory()) {\n    window['history'].back();\n  } else {\n  }\n  return this;\n}\n\n// 只改变当前的 `url` 但是不触发路由\n// 和 dispatch 刚好相反，dispatch 只触发路由但不改变 `url`\nexport function setUrlOnly (path) {\n  if (typeof path === 'object' && path !== null) {\n    path = routeDescObjToPath(this._namedRoutes, path);\n  }\n  Listener.setUrlOnly = true; // make sure not to trigger anything\n  Listener.setHashHistory(path);\n  return this;\n}\n\n// 重载当前页面\nexport function reload () {\n  if (this.options.mode === 'history') {\n    this.dispatch(`${location.pathname}${location.search}${location.hash}`);\n  } else {\n    this.dispatch(location.hash.replace(/^#!?/, ''));\n  }\n  return this;\n}\n\n// 重定向（只产生一条历史记录）\nexport function redirect (path) {\n  if (typeof path === 'object' && path !== null) { // {name: 'routeName', params: {}}\n    path = routeDescObjToPath(this._namedRoutes, path);\n  }\n  if (this.options.mode === 'history') {\n    history.replaceState({}, '', path);\n    this.dispatch(path);\n  } else {\n    location.replace(formatHashBangURI(path));\n  }\n  return this;\n}\n\n// 创建一个链接\nexport function createLink (linkTo) {\n  let result = routeDescObjToPath(this._namedRoutes, linkTo);\n  if (result === null) {\n    warn(`路径 ${linkTo.name} 不存在`);\n    result = '/';\n  }\n  result = result === '' ? '/' : result;\n  return this.options.mode === 'history' ? result : `/#!${result}`;\n}\n","import {\n  destroy,\n  start,\n  stop,\n  mount,\n  dispatch,\n  on,\n  off,\n  once,\n  go,\n  redirect,\n  back,\n  setUrlOnly,\n  reload,\n  createLink\n} from './api';\n\nimport QS from './querystring';\nimport { createRootRouteTree } from './rtree';\nimport { extend, makeSureArray } from './utils';\nimport Listener from './listener';\n\nlet uid = 0;\n\n// mode: history|hashbang\n// history     使用 HTML5 History API\n// hashbang    使用 hash（hashbang 模式）\nconst optionDefaults = {\n  title: false,\n  mode: 'hashbang',\n  recurse: false // @TODO\n};\n\n/**\n * Router (routes)\n * @constructor\n * @param {Object} routes **Optional**\n */\n// 虽然允许在同一个应用创建多个 Router ，但是正常情况下你只需要创建一个实例\nexport default function Router(routes, options) {\n  routes = routes || {};\n  this._namedRoutes = {}; // 具名路由\n  this._rtree = createRootRouteTree(this._namedRoutes, routes);\n  this._hooks = {}; // 全局钩子\n  this._init(options);\n}\n\nRouter.QS = QS;\n\nconst proto = Router.prototype;\n\nproto._init = function _init (options) {\n  options = options || {};\n  this._uid = uid++;\n  this._isRunning = false;\n  this.options = extend({}, optionDefaults, options);\n  Listener.setMode(options.mode);\n  this._hooks['beforeEachEnter'] = makeSureArray(options.beforeEachEnter);\n  this._hooks['beforeEachLeave'] = makeSureArray(options.beforeEachLeave);\n};\n\n// 调用全局钩子\nproto._callHooks = function _callHooks (hookName, Req) {\n  const callbacks = this._hooks[hookName] || [];\n  for (let i = 0; i < callbacks.length; ++i) {\n    callbacks[i].call(this, Req);\n  }\n};\n\n// start a router\nproto.start = start; // 🆗\n\n// stop a router\nproto.stop = stop; // 🆗\n\n// destroy a router\nproto.destroy = destroy; // 🆗\n\n// mount a sub-route-tree on a route node\nproto.mount = mount; // 🆗\n\n// dynamic add a route to route-tree\nproto.on = on; // 🆗\n\n// like .on except that it will dispatch only once\nproto.once = once; // 🆗\n\n// stop listen to a route\nproto.off = off; // 🆗\n\n// dispatch a route if path matches\nproto.dispatch = dispatch; // 🆗\n\nproto.go = go; // 🆗\n\nproto.redirect = redirect; // 🆗\n\nproto.back = back;\n\n// only set url, don't dispatch any routes\nproto.setUrlOnly = setUrlOnly; // 🆗\n\n// redispatch current route\nproto.reload = reload; // 🆗\n\nproto.createLink = createLink;\n"],"names":["extend","obj","srcList","Array","prototype","slice","call","arguments","i","len","length","src","q","hasOwnProperty","isThenable","addEvent","name","handler","window","addEventListener","attachEvent","warn","message","console","isArray","Object","toString","makeSureArray","ArrayCopy","arr","formatHashBangURI","path","raw","replace","charAt","historySupport","ua","navigator","userAgent","indexOf","history","MODE","RouteMode","HASHBANG","_init","Listener","mode","String","toUpperCase","HISTORY","onchange","fn","listeners","push","id","splice","targetURL","pushState","hash","currentURL","location","queryStringIndex","test","$1","onChangeEvent","setUrlOnly","l","encode","encodeURIComponent","decode","decodeURIComponent","traditional","appendString","keysArray","p","names","sort","parts","value","_parts","j","join","queryString","trim","queryParts","split","query","undefined","RNode","params","title","data","_hooks","children","parent","_registered","_redirect","proto","afterThen","thenable","restList","context","then","callThenableList","callbacks","currentReturn","apply","callHooks","_callHooks","hookName","Req","_copyCallbacks","addHooks","addChildren","concat","removeChild","child","createRNode","findNode","routeTreeRoot","routePath","createIfNotFound","target","found","realCurrentValue","matcher","k","replacement","$2","$3","extendNode","createRouteNodeInPath","rootNode","rnode","createRouteTree","namedRoutes","routeNode","routeOptions","redirect","beforeEnter","controllers","beforeLeave","sub","subRoutePath","subRouteNode","createRootRouteTree","routes","rootRouteNode","calcRNodeDepth","currentRouteNode","depth","dfs","currentPathValue","RegExp","matches","match","currentParams","paramsMatches","notFoundList","_result","notFound","max","maxIndex","searchRouteTree","tree","result","lastReq","lastRouteNode","handlerHashbangMode","newURL","url","dispatch","handlerHistoryMode","pathname","search","start","_isRunning","_handler","options","_this","init","add","_uid","href","stop","remove","destroy","_namedRoutes","_rtree","mount","routeDescObjToPath","routeDescObj","paths","pathvalue","Error","paramsIndex","paramKey","unshift","QS","stringify","routeTree","uri","queryIndex","_hashIndex","hashIndex","parse","$router","on","off","cb","once","onlyOnce","req","go","loc","oldURI","setHashHistory","newURI","back","supportHistory","reload","replaceState","createLink","linkTo","uid","optionDefaults","Router","setMode","beforeEachEnter","beforeEachLeave"],"mappings":"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"}