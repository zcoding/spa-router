{"version":3,"file":"spa-router.js","sources":["../../src/utils.js","../../src/listener.js","../../src/querystring.js","../../src/rnode.js","../../src/rtree.js","../../src/api.js","../../src/main.js"],"sourcesContent":["export function extend() {\n  const obj = {};\n  const srcList = Array.prototype.slice.call(arguments, 0);\n  for (let i = 0, len = srcList.length; i < len; ++i) {\n    const src = srcList[i];\n    for (let q in src) {\n      if (src.hasOwnProperty(q)) {\n        obj[q] = src[q];\n      }\n    }\n  }\n  return obj;\n}\n\n// 判断是否 thenable 对象\nexport function isThenable (obj) {\n  return typeof obj === 'object' && typeof obj['then'] === 'function';\n}\n\nexport function removeHashBang (url) {\n  return url.replace(/^#!?/, '');\n}\n\nexport function addEvent(name, handler) {\n  if (window.addEventListener) {\n    window.addEventListener(name, handler, false);\n  } else if (window.attachEvent) {\n    window.attachEvent('on' + name, handler);\n  } else {\n    window['on' + name] = handler;\n  }\n}\n\nexport function warn (message) {\n  if (window['console'] && console.warn) {\n    console.warn(message);\n  }\n}\n\nexport const isArray = Array.isArray ? Array.isArray : function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexport function makeSureArray (obj) {\n  return isArray(obj) ? obj : (obj ? [obj] : []);\n}\n\nexport function ArrayCopy (arr) {\n  return arr.slice(0);\n}\n","import { addEvent, warn } from './utils';\n\nconst historySupport = typeof window.history['pushState'] !== \"undefined\";\n\nconst MODE = {\n  HASH: 1,\n  HASHBANG: 1,\n  HISTORY: 2\n};\n\nlet RouteMode = MODE.HASHBANG;\n\nlet _init = false;\n\n/// Listener\nconst Listener = {\n  listeners: [],\n\n  setUrlOnly: false,\n\n  setMode (mode) {\n    mode = String(mode).toUpperCase();\n    RouteMode = MODE[mode] || MODE.HASHBANG;\n  },\n\n  init () {\n    if (_init) {\n      return this;\n    }\n    _init = true;\n    if (RouteMode === MODE.HISTORY) { // IE 10+\n      if (historySupport) {\n        addEvent('popstate', onchange);\n      } else {\n        RouteMode = MODE.HASHBANG;\n        // warning\n        warn('你的浏览器不支持 History API ，只能使用 hashbang 模式');\n        addEvent('hashchange', onchange);\n      }\n    } else {\n      addEvent('hashchange', onchange);\n    }\n    return this;\n  },\n\n  add (fn) {\n    this.listeners.push(fn);\n    return this;\n  },\n\n  remove (id) {\n    for (let i = 0; i < this.listeners.length; ++i) {\n      if (this.listeners[i].id === id) {\n        this.listeners.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  },\n\n  setHashHistory (targetURL) {\n    if (RouteMode === MODE.HISTORY) {\n      history.pushState({}, document.title, targetURL);\n    } else {\n      if (targetURL[0] === '/') {\n        location.hash = `!${targetURL}`;\n      } else {\n        let currentURL = location.hash.replace(/^#!?/, ''); // 去掉前面的 #!\n        const queryStringIndex = currentURL.indexOf('?');\n        if (queryStringIndex !== -1) {\n          currentURL = currentURL.slice(0, queryStringIndex);\n        }\n        if (/.*\\/$/.test(currentURL)) {\n          location.hash = `!${currentURL}${targetURL}`;\n        } else {\n          const hash = currentURL.replace(/([^\\/]+|)$/, function($1) {\n            return $1 === '' ? '/' + targetURL : targetURL;\n          });\n          location.hash = `!${hash}`;\n        }\n      }\n    }\n    return this;\n  },\n\n  stop () {\n    // remove event listener\n  }\n};\n\nfunction onchange(onChangeEvent) {\n  if (Listener.setUrlOnly) {\n    Listener.setUrlOnly = false;\n    return false;\n  }\n  let listeners = Listener.listeners;\n  for (let i = 0, l = listeners.length; i < l; i++) {\n    listeners[i].handler.call(null, onChangeEvent);\n  }\n}\n\nexport default Listener;\n","const encode = encodeURIComponent, decode = decodeURIComponent;\n\nexport default {\n  /**\n   * querystring.stringify\n   * @param { Object } obj\n   * @param { Boolean } traditional [default:false]\n   * @return { String }\n   *\n   * traditional is true:  {x: [1, 2]} => 'x=1&x=2'\n   * traditional is false: {x: [1, 2]} => 'x[]=1&x[]=2'\n   */\n  stringify: function(obj, traditional) {\n    if (!obj) {\n      return '';\n    }\n    var appendString = traditional ? '' : '[]';\n    var names = Object.keys(obj).sort();\n\n    var parts = [];\n    for (var i = 0; i < names.length; ++i) {\n      var name = names[i];\n      var value = obj[name];\n\n      if (Array.isArray(value)) {\n        value.sort();\n        var _parts = [];\n        for (var j = 0; j < value.length; ++j) {\n          _parts.push(`${encode(name).replace(/%20/g, '+')}${appendString}=${encode(value[j]).replace(/%20/g, '+')}`);\n        }\n        parts.push(_parts.join('&'));\n        continue;\n      }\n      parts.push(`${encode(name).replace(/%20/g, '+')}=${encode(value).replace(/%20/g, '+')}`);\n    }\n    return parts.join('&');\n  },\n\n  /**\n   * querystring.parse\n   * @param { String } queryString\n   * @return { Object }\n   * \n   * 'x=1&y=2' => {x: 1, y: 2}\n   * 'x=1&x=2' => {x: 2}\n   */\n  parse: function(queryString) {\n    if (typeof queryString !== 'string') {\n      return {};\n    }\n\n    queryString = queryString.trim().replace(/^(\\?|#)/, '');\n\n    if (queryString === '') {\n      return {};\n    }\n\n    var queryParts = queryString.split('&');\n\n    let query = {};\n\n    for (let i = 0; i < queryParts.length; ++i) {\n      var parts = queryParts[i].replace(/\\+/g, '%20').split('='); // 特殊字符`+`转换为空格\n      var name = parts[0], value = parts[1];\n\n      name = decode(name);\n\n      value = value === undefined ? null : decode(value);\n\n      if (!query.hasOwnProperty(name)) {\n        query[name] = value;\n      } else if (Array.isArray(query[name])) {\n        query[name].push(value);\n      } else {\n        query[name] = [query[name], value];\n      }\n    }\n    return query;\n  }\n};\n","import { isArray, makeSureArray, ArrayCopy, isThenable } from './utils';\n\n/**\n * RNode\n * @constructor\n * @param {String} value\n *\n * path:          区分同级节点的唯一标识\n * params:        path 包含的参数，使用{参数名:参数规则}键值对表示\n * callbacks:     路由匹配时执行的回调函数或队列\n * beforeEnter:   路由匹配时，callbacks 执行之前执行的回调函数或队列（如果 beforeEnter 返回 false 则不会进入 callbacks 执行阶段）\n * beforeLeave:   路由匹配时，进入下一个路由之前（也就是当前路由离开之前）执行的回调函数或队列\n * children:      子节点列表引用\n * parent:        父节点引用\n */\nfunction RNode(value) {\n  this.path = value;\n  this.params = false;\n  this.data = null;\n  this._hooks = {};\n  this.children = [];\n  this.parent = null;\n}\n\nconst proto = RNode.prototype;\n\nfunction afterThen (thenable, restList, context, params) {\n  return thenable.then(function () {\n    return callThenableList(restList, context, params);\n  });\n}\n\nfunction callThenableList (callbacks, context, params) {\n  let currentReturn;\n  for (let i = 0; i < callbacks.length; ++i) {\n    currentReturn = callbacks[i].apply(context, params);\n    if (isThenable(currentReturn)) {\n      return afterThen(currentReturn, callbacks.slice(i+1), context, params);\n    } else if (currentReturn === false) {\n      break;\n    }\n  }\n  return currentReturn;\n}\n\n// 如果返回 thenable 对象，则后面的回调要等到当前异步操作完成再执行，如果异步操作失败，则后面的回调不执行\n// 如果返回 false 则后面的回调不执行\nproto.callHooks = function _callHooks (hookName, Req) {\n  const callbacks = this._hooks[hookName] || [];\n  const _copyCallbacks = ArrayCopy(callbacks); // 复制一个，避免中间调用了 off 导致 length 变化\n  callThenableList(_copyCallbacks, null, [Req]);\n  return this;\n};\n\nproto.addHooks = function addHooks (hookName, callbacks) {\n  this._hooks[hookName] = makeSureArray(callbacks);\n  return this;\n};\n\n// add children\nproto.addChildren = function addChildren (children) {\n  if (isArray(children)) {\n    this.children = this.children.concat(children);\n  } else {\n    this.children.push(children);\n  }\n  return this;\n};\n\nproto.removeChild = function removeChild (child) {\n  for (let i = 0; i < this.children.length; ++i) {\n    if (this.children[i] === child) {\n      this.children.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\nexport default function createRNode (value) {\n  return new RNode(value);\n}\n","import createRNode from './rnode';\nimport { warn } from './utils';\n\n/**\n * 根据给定的 path，以 routeTreeRoot 为根节点查找，返回 path 对应的 rnode 节点\n * 如果节点不存在，并且 createIfNotFound 为 true 就创建新节点\n * 匹配参数（参数名由字母、数字、下划线组成，不能以数字开头。后面带括号的是特定参数的匹配规则。）\n * @param {RNode} tree\n * @param {String} path\n * @param {Boolean} createIfNotFound 当节点不存在时创建新节点\n * @return {RNode}\n * */\nexport function findNode(routeTreeRoot, routePath, createIfNotFound) {\n  if (routePath === '') { // 当前节点\n    return routeTreeRoot;\n  }\n  const parts = routePath.split('/');\n  let target = null, found = false;\n  let parent = routeTreeRoot;\n  let params;\n  for (let i = 0, len = parts.length; i < len; ++i) {\n    params = false;\n    let realCurrentValue = parts[i];\n\n    const matcher = /:([a-zA-Z_][a-zA-Z0-9_]*)(\\([^\\)]+\\))?/g;\n\n    let k = 0;\n\n    function replacement($1, $2, $3) {\n      params = params || [];\n      params[k++] = $2;\n      if (!$3) { // In IE 8 , $3 is an empty String while in other browser it is undefined.\n        return '([a-zA-Z0-9_]+)';\n      } else {\n        return $3;\n      }\n    }\n\n    realCurrentValue = realCurrentValue.replace(matcher, replacement);\n\n    for (let j = 0; j < parent.children.length; ++j ) {\n      if (parent.children[j].path === realCurrentValue) {\n        target = parent.children[j];\n        found = true;\n        break;\n      }\n    }\n    if (!found) { // 不存在\n      if (!createIfNotFound) return false;\n      // 创建新节点\n      const extendNode = createRNode(realCurrentValue);\n      parent.addChildren(extendNode);\n      extendNode.parent = parent;\n      extendNode.params = params;\n      target = extendNode;\n    }\n    parent = target;\n    found = false;\n  }\n  return target;\n}\n\nfunction createRouteNodeInPath (rootNode, routePath) {\n  routePath = routePath.replace(/^\\/([^\\/]*)/, '$1'); // 去掉前置 /\n  if (routePath === '*') {\n    const rnode = createRNode('');\n    rnode.parent = rootNode;\n    rootNode.addChildren(rnode);\n    return rnode;\n  } else {\n    return findNode(rootNode, routePath, true);\n  }\n}\n\n// 构造路由树\nexport function createRouteTree(namedRoutes, routeNode, routeOptions) {\n  if (routeOptions.name) {\n    if (namedRoutes[routeOptions.name]) {\n      warn(`已经存在的具名路由 ${routeOptions.name} 将被覆盖`);\n    }\n    namedRoutes[routeOptions.name] = routeNode;\n  }\n  if (routeOptions.data) {\n    routeNode.data = routeOptions.data;\n  }\n  routeNode.addHooks('beforeEnter', routeOptions.beforeEnter);\n  routeNode.addHooks('callbacks', routeOptions.controllers);\n  routeNode.addHooks('beforeLeave', routeOptions.beforeLeave);\n  if (routeOptions.sub) { // 子路由\n    for (let subRoutePath in routeOptions.sub) {\n      if (routeOptions.sub.hasOwnProperty(subRoutePath)) {\n        const subRouteNode = createRouteNodeInPath(routeNode, subRoutePath);\n        createRouteTree(namedRoutes, subRouteNode, routeOptions.sub[subRoutePath]);\n      }\n    }\n  }\n\n}\n\n// 创建根结点\nexport function createRootRouteTree (namedRoutes, routes) {\n  const rootRouteNode = createRNode('');\n  createRouteTree(namedRoutes, rootRouteNode, {\n    sub: routes\n  });\n  return rootRouteNode;\n}\n\n// 计算一个节点在一棵树的层次\nfunction calcRNodeDepth (currentRouteNode) {\n  let depth = 0;\n  let rnode = currentRouteNode;\n  while (rnode) {\n    depth++;\n    rnode = rnode.parent;\n  }\n  return depth;\n}\n\n/**\n * dfs 找匹配的路由节点\n * @param {RNode} currentRouteNode 当前节点\n * @param {Array} parts 路径分段数组\n * */\nexport function dfs (currentRouteNode, parts) {\n  const currentPathValue = parts[0];\n  const matcher = new RegExp('^' + currentRouteNode.path + '$');\n  const matches = currentPathValue.match(matcher);\n  if (!matches) { // 当前节点不匹配，返回\n    // 如果当前节点是 * 节点，则可能在找不到的时候返回这个节点\n    if (currentRouteNode.path === '') {\n      return {\n        rnode: currentRouteNode,\n        params: {},\n        notFound: true\n      };\n    }\n    return false;\n  }\n  const currentParams = {};\n  if (currentRouteNode.params) {\n    const paramsMatches = Array.prototype.slice.call(matches, 1);\n    for (let k = 0; k < paramsMatches.length; ++k) {\n      currentParams[currentRouteNode.params[k]] = paramsMatches[k];\n    }\n  }\n  if (parts.length === 1) { // 在当前节点完成匹配\n    return {\n      rnode: currentRouteNode,\n      params: currentParams\n    };\n  }\n  const notFoundList = [];\n  for (let i = 0; i < currentRouteNode.children.length; ++i) {\n    const _result = dfs(currentRouteNode.children[i], parts.slice(1));\n    if (_result && !_result.notFound) { // 在子树中完成匹配\n      // 合并 params\n      for (let p in _result.params) {\n        if (_result.params.hasOwnProperty(p)) {\n          currentParams[p] = _result.params[p];\n        }\n      }\n      return {\n        rnode: _result.rnode,\n        params: currentParams\n      };\n    }\n    if (_result.notFound) {\n      // 合并 currentParams\n      for (let p in currentParams) {\n        if (currentParams.hasOwnProperty(p)) {\n          _result.params[p] = currentParams[p];\n        }\n      }\n      notFoundList.push(_result);\n    }\n  }\n  // 全部路径都走完，找不到匹配项\n  // 如果有 * 节点匹配，则返回匹配路径最长的 * 节点\n  if (notFoundList.length > 0) {\n    let max = -1, maxIndex = -1;\n    for (let i = 0; i < notFoundList.length; ++i) {\n      const depth = calcRNodeDepth(notFoundList[i].rnode);\n      if (depth > max) {\n        max = depth;\n        maxIndex = i;\n      }\n    }\n    return notFoundList[maxIndex];\n  }\n  return false;\n}\n\n/**\n * 搜索路由树，看是否存在匹配的路径，如果存在，返回相应的回调函数\n * @todo 只返回第一个匹配到的路由（如果存在多个匹配？）\n * @param {RNode} tree 树根\n * @param {String} path 要匹配的路径\n * 返回值包含两个，用数组表示[rnode, params]\n * @return {Function|Array|null} 如果存在就返回相应的回调，否则返回null\n * @return {[Array, Object]} 同时返回回调和参数\n *\n * */\nexport function searchRouteTree(tree, path) {\n  path = path === '/' ? '' : path; // 如果是 / 路径，特殊处理（避免 split 之后多一项）\n\n  const result = dfs(tree, path.split('/'));\n\n  if (result.notFound) {\n    return {\n      rnode: result.rnode,\n      params: result.params\n    };\n  }\n\n  return result;\n}\n","import { makeSureArray, warn } from './utils';\nimport Listener from './listener';\nimport QS from './querystring';\nimport { findNode, createRouteTree, searchRouteTree } from './rtree';\n\nlet lastReq = null, lastRouteNode = null;\n\nfunction handlerHashbangMode (onChangeEvent) {\n  const newURL = onChangeEvent && onChangeEvent.newURL || location.hash;\n  const url = newURL.replace(/.*#!/, '');\n  this.dispatch(url.charAt(0) === '/' ? url : `/${url}`);\n}\n\nfunction handlerHistoryMode (onChangeEvent) {\n  const url = location.pathname + location.search + location.hash;\n  this.dispatch(url.charAt(0) === '/' ? url : `/${url}`);\n}\n\nexport function start () {\n  if (this._isRunning) { // start 只调用一次\n    warn('start 方法只能调用一次');\n    return this;\n  }\n  this._isRunning = true;\n  const _handler = this.options.mode === 'history' ? handlerHistoryMode : handlerHashbangMode;\n  const _this = this;\n  Listener.init().add({\n    id: this._uid,\n    handler: function handler () {\n      return _handler.call(_this);\n    }\n  });\n  // 首次触发\n  _handler.call(this);\n  return this;\n}\n\nexport function stop () {\n  Listener.remove(this._uid);\n  this._isRunning = false;\n  return this;\n}\n\nexport function destroy () {\n  this.stop();\n  this._namedRoutes = null;\n  this._rtree = null;\n  this._hooks = null;\n  this.options = null;\n  return null;\n}\n\n// 动态添加新路由（可能会替换原有的路由）\nexport function mount (routePath, routes) {\n  routePath = routePath.replace(/^\\/([^\\/]*)/, '$1'); // 去掉前置 /\n  const currentRouteNode = findNode(this._rtree, routePath, true);\n  createRouteTree(this._namedRoutes, currentRouteNode, routes);\n  return this;\n}\n\n// 路由描述对象转换为路径\n// 如果缺少参数，会抛出错误\nfunction routeDescObjToPath (namedRoutes, routeDescObj) {\n  const routeNode = namedRoutes[routeDescObj.name];\n  if (!routeNode) {\n    return null;\n  }\n  const paths = [];\n  let rnode = routeNode;\n  while (rnode) {\n    let pathvalue = rnode.path;\n    if (rnode.params) {\n      if (!routeDescObj.params) {\n        throw new Error('缺少参数');\n      }\n      let paramsIndex = 0;\n      pathvalue = pathvalue.replace(/\\([^\\)]+\\)/g, function ($1) {\n        const paramKey = rnode.params[paramsIndex++];\n        if (!routeDescObj.params.hasOwnProperty(paramKey)) {\n          throw new Error(`缺少参数 \"${paramKey}\"`);\n        }\n        return routeDescObj.params[paramKey];\n      });\n    }\n    paths.unshift(pathvalue);\n    rnode = rnode.parent;\n  }\n  return paths.join('/');\n}\n\n// 根据给定的路径，遍历路由树，只要找到一个匹配的就把路由返回\nexport function dispatch (path) {\n  if (typeof path === 'object' && path !== null) { // {name: 'routeName', params: {}}\n    path = routeDescObjToPath(this._namedRoutes, path);\n  }\n  if (lastReq) {\n    this._callHooks('beforeEachLeave', lastReq);\n    if (lastRouteNode) {\n      lastRouteNode.callHooks('beforeLeave', lastReq);\n    }\n  }\n  const routeTree = this._rtree;\n  // 保存原始请求uri\n  const uri = path;\n  const queryIndex = path.indexOf('?');\n  const _hashIndex = path.indexOf('#');\n  const hashIndex = _hashIndex === -1 ? path.length : _hashIndex;\n  const queryString = queryIndex === -1 ? '' : path.slice(queryIndex+1, hashIndex);\n  path = queryIndex === -1 ? path : path.slice(0, queryIndex);\n  const Req = {uri: uri, path: path, query: QS.parse(queryString), $router: this};\n\n  if (path === '/') {\n    path = '';\n  }\n  const result = searchRouteTree(routeTree, path);\n  if (!result) return this; // 啥都找不到\n  const routeNode = result.rnode, params = result.params;\n  Req.params = params;\n  Req.data = routeNode ? routeNode.data : null;\n  this._callHooks('beforeEachEnter', Req);\n  if (routeNode) {\n    routeNode.callHooks('beforeEnter', Req);\n    routeNode.callHooks('callbacks', Req);\n  }\n  lastReq = Req;\n  lastRouteNode = routeNode;\n  return this;\n}\n\n// 动态添加路由回调\nexport function on (routePath, callbacks) {\n  routePath = routePath.replace(/^\\/([^\\/]*)/, '$1'); // 去掉前置 /\n  const routeNode = findNode(this._rtree, routePath, true);\n  if (!routeNode._hooks['callbacks']) {\n    routeNode.addHooks('callbacks', callbacks);\n  } else {\n    routeNode._hooks['callbacks'] = routeNode._hooks['callbacks'].concat(makeSureArray(callbacks));\n  }\n  return this;\n}\n\n// 动态移除路由回调\nexport function off (routePath, cb) {\n  routePath = routePath.replace(/^\\/([^\\/]*)/, '$1'); // 去掉前置 /\n  const routeNode = findNode(this._rtree, routePath, false);\n  if (routeNode && routeNode._hooks['callbacks']) {\n    if (cb) {\n      for (let i = 0; i < routeNode._hooks['callbacks'].length; ++i) {\n        if (routeNode._hooks['callbacks'][i] === cb) {\n          routeNode._hooks['callbacks'].splice(i, 1);\n          break;\n        }\n      }\n    } else {\n      routeNode._hooks['callbacks'].splice(0, routeNode._hooks['callbacks'].length);\n    }\n  }\n  if (routeNode && routeNode._hooks['callbacks'] && routeNode._hooks['callbacks'].length === 0 && routeNode.children.length === 0 && routeNode.parent) {\n    routeNode.parent.removeChild(routeNode);\n  }\n  return this;\n}\n\n// 动态添加路由回调，但是只响应一次\nexport function once (routePath, callbacks) {\n  callbacks = makeSureArray(callbacks);\n  const _this = this;\n  function onlyOnce (req) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      callbacks[i].call(_this, req);\n    }\n    _this.off(routePath, onlyOnce);\n  }\n  return this.on(routePath, onlyOnce);\n}\n\n/**\n * 这个方法会改变当前页面的 `url`，从而触发路由\n * 在 history 模式下，用户无法通过标签改变 `url` 而不跳转页面，需要监听 click 事件，禁止默认跳转行为，并调用 go 方法\n * 如果是 history 模式，相当于调用一次 history.pushState() 然后再调用 .dispatch()\n * 如果 url 没有改变，不会\"刷新\"页面，要通过代码“刷新”页面，可以调用 reload 方法\n *\n * path 可以是一个路由描述对象\n * */\nexport function go (path) {\n  const loc = window.location;\n  const oldURI = loc.pathname + loc.search;\n  if (typeof path === 'object' && path !== null) {\n    path = routeDescObjToPath(this._namedRoutes, path);\n  }\n  Listener.setHashHistory(path);\n  const newURI = `${loc.pathname}${loc.search}`;\n  if (this.options.mode === 'history' && oldURI !== newURI) {\n    this.dispatch(newURI);\n  }\n  return this;\n}\n\nexport function back () {}\n\n// 只改变当前的 `url` 但是不触发路由\n// 和 dispatch 刚好相反，dispatch 只触发路由但不改变 `url`\nexport function setUrlOnly (path) {\n  if (typeof path === 'object' && path !== null) {\n    path = routeDescObjToPath(this._namedRoutes, path);\n  }\n  Listener.setUrlOnly = true; // make sure not to trigger anything\n  Listener.setHashHistory(path);\n  return this;\n}\n\n// 重载当前页面\nexport function reload () {\n  if (this.options.mode === 'history') {\n    this.dispatch(`${location.pathname}${location.search}${location.hash}`);\n  } else {\n    this.dispatch(location.hash.replace(/^#!?/, ''));\n  }\n  return this;\n}\n\n// 创建一个链接\nexport function createLink (linkTo) {\n  let result = routeDescObjToPath(this._namedRoutes, linkTo);\n  if (result === null) {\n    warn(`路径 ${linkTo.name} 不存在`);\n    result = '/';\n  }\n  result = result === '' ? '/' : result;\n  return this.options.mode === 'history' ? result : `/#!${result}`;\n}\n","import {\n  destroy,\n  start,\n  stop,\n  mount,\n  dispatch,\n  on,\n  off,\n  once,\n  go,\n  back,\n  setUrlOnly,\n  reload,\n  createLink\n} from './api';\n\nimport QS from './querystring';\nimport { createRootRouteTree, dfs } from './rtree';\nimport { extend, makeSureArray } from './utils';\nimport Listener from './listener';\n\nlet uid = 0;\n\n// mode: history|hashbang\n// history     使用 HTML5 History API\n// hashbang    使用 hash（hashbang 模式）\nconst optionDefaults = {\n  mode: 'hashbang',\n  recurse: false // @TODO\n};\n\n/**\n * Router (routes)\n * @constructor\n * @param {Object} routes **Optional**\n */\n// 虽然允许在同一个应用创建多个 Router ，但是正常情况下你只需要创建一个实例\nexport default function Router(routes, options) {\n  routes = routes || {};\n  this._namedRoutes = {}; // 具名路由\n  this._rtree = createRootRouteTree(this._namedRoutes, routes);\n  this._hooks = {}; // 全局钩子\n  this._init(options);\n}\n\nRouter.QS = QS;\n\nconst proto = Router.prototype;\n\nproto._init = function _init (options) {\n  options = options || {};\n  this._uid = uid++;\n  this._isRunning = false;\n  this.options = extend({}, optionDefaults, options);\n  Listener.setMode(options.mode);\n  this._hooks['beforeEachEnter'] = makeSureArray(options.beforeEachEnter);\n  this._hooks['beforeEachLeave'] = makeSureArray(options.beforeEachLeave);\n};\n\n// 调用全局钩子\nproto._callHooks = function _callHooks (hookName, Req) {\n  const callbacks = this._hooks[hookName] || [];\n  for (let i = 0; i < callbacks.length; ++i) {\n    callbacks[i].call(this, Req);\n  }\n};\n\n// start a router\nproto.start = start; // 🆗\n\n// stop a router\nproto.stop = stop; // 🆗\n\n// destroy a router\nproto.destroy = destroy; // 🆗\n\n// mount a sub-route-tree on a route node\nproto.mount = mount; // 🆗\n\n// dynamic add a route to route-tree\nproto.on = on; // 🆗\n\n// like .on except that it will dispatch only once\nproto.once = once; // 🆗\n\n// stop listen to a route\nproto.off = off; // 🆗\n\n// dispatch a route if path matches\nproto.dispatch = dispatch; // 🆗\n\nproto.go = go; // 🆗\n\nproto.back = back;\n\n// only set url, don't dispatch any routes\nproto.setUrlOnly = setUrlOnly; // 🆗\n\n// redispatch current route\nproto.reload = reload; // 🆗\n\nproto.createLink = createLink;\n"],"names":["extend","obj","srcList","Array","prototype","slice","call","arguments","i","len","length","src","q","hasOwnProperty","isThenable","addEvent","name","handler","window","addEventListener","attachEvent","warn","message","console","isArray","Object","toString","makeSureArray","ArrayCopy","arr","historySupport","history","MODE","RouteMode","HASHBANG","_init","Listener","mode","String","toUpperCase","HISTORY","onchange","fn","listeners","push","id","splice","targetURL","pushState","document","title","hash","currentURL","location","replace","queryStringIndex","indexOf","test","$1","onChangeEvent","setUrlOnly","l","encode","encodeURIComponent","decode","decodeURIComponent","traditional","appendString","names","keys","sort","parts","value","_parts","j","join","queryString","trim","queryParts","split","query","undefined","RNode","path","params","data","_hooks","children","parent","proto","afterThen","thenable","restList","context","then","callThenableList","callbacks","currentReturn","apply","callHooks","_callHooks","hookName","Req","_copyCallbacks","addHooks","addChildren","concat","removeChild","child","createRNode","findNode","routeTreeRoot","routePath","createIfNotFound","target","found","realCurrentValue","matcher","k","replacement","$2","$3","extendNode","createRouteNodeInPath","rootNode","rnode","createRouteTree","namedRoutes","routeNode","routeOptions","beforeEnter","controllers","beforeLeave","sub","subRoutePath","subRouteNode","createRootRouteTree","routes","rootRouteNode","calcRNodeDepth","currentRouteNode","depth","dfs","currentPathValue","RegExp","matches","match","currentParams","paramsMatches","notFoundList","_result","notFound","p","max","maxIndex","searchRouteTree","tree","result","lastReq","lastRouteNode","handlerHashbangMode","newURL","url","dispatch","charAt","handlerHistoryMode","pathname","search","start","_isRunning","_handler","options","_this","init","add","_uid","stop","remove","destroy","_namedRoutes","_rtree","mount","routeDescObjToPath","routeDescObj","paths","pathvalue","Error","paramsIndex","paramKey","unshift","routeTree","uri","queryIndex","_hashIndex","hashIndex","QS","parse","$router","on","off","cb","once","onlyOnce","req","go","loc","oldURI","setHashHistory","newURI","back","reload","createLink","linkTo","uid","optionDefaults","Router","setMode","beforeEachEnter","beforeEachLeave"],"mappings":"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"}